name: release
on: 
  schedule:
    - cron: '0 0 * * 0,4'
  workflow_dispatch:
    inputs:
      version:
        description: "CBQN Version"
        default: ""
        required: false
      delete_prev:
        description: "Delete previous release"
        type: boolean
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      SHA256: ""
      BRANCH: develop
      VERSION: ""
      TAG: auto
      PRERELEASE: true
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      -
        name: Set branch
        run: |
          if [ ! -z ${{ inputs.version }} ]; then
            echo "BRANCH=v${{ inputs.version }}" >> $GITHUB_ENV
            echo "VERSION=${{ inputs.version }}" >> $GITHUB_ENV
            echo "TAG=cbqn-${{ inputs.version }}" >> $GITHUB_ENV
            echo "PRERELEASE=false" >> $GITHUB_ENV
          fi
      - 
        name: Build Docker Image
        uses: docker/build-push-action@v5
        with:
          push: false
          tags: build-bqn
          build-args: |
            NATIVE=0
            BRANCH=${{ env.BRANCH }}
            VERSION=${{ env.VERSION }}
      - 
        name: Get Zip
        run: docker run -v ".:/opt/mount" --rm -d build-bqn
      -
        name: Get sha256
        run: |
          SHA256=$(sha256sum bqn.zip | awk '{print $1}')
          echo "SHA256=${SHA256}" >> $GITHUB_ENV
      -
        name: Delete previous release
        if: ${{ contains(inputs.delete_prev, 'true') }}
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          if git show-ref --tags --verify --quiet "refs/tags/${{ env.TAG }}"; then
            gh release delete ${{ env.TAG }} -y
          fi
      - 
        name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG }}
          draft: false
          prerelease: ${{ env.PRERELEASE }}
          files: bqn.zip
          body: |
            Branch: `${{ env.BRANCH }}`

            SHA256: `${{ env.SHA256 }}`
